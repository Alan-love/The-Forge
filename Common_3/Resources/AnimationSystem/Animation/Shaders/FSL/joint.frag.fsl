/*
 * Copyright (c) 2017-2025 The Forge Interactive Inc.
 * 
 * This file is part of The-Forge
 * (see https://github.com/ConfettiFX/The-Forge).
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
*/

#include "animation_resources.h"

STRUCT(VSOutput)
{
    DATA(float4, Position, SV_Position);
    DATA(float4, QuadCoord, TEXCOORD0);
    DATA(float4, LightDirection, TEXCOORD1);
};

ROOT_SIGNATURE(DefaultRootSignature)
float4 PS_MAIN(VSOutput In)
{
    INIT_MAIN;
    float4 Out;
    float2 texCoord = In.QuadCoord.xy;
    float radius = length(texCoord);
    // cutout circle
    if( radius > 1.0)
    {
        clip(-1);
    }
    float4 localNormal = float4(In.QuadCoord.xy,0.0f,0.0f);
    localNormal.xyz = lerp( float3( 0.0f, 0.0f, -1.0f ), float3(In.QuadCoord.xy,0.0f), radius );
    float4 normal = normalize(mul(gUniformBlock.viewMatrix, normalize(localNormal)));
    float3 lightDir = In.LightDirection.xyz;
    float lightIntensity = 1.0f;
    float ambientCoeff = 0.4;
    float3 baseColor = gUniformBlock.jointColor.xyz;
    float3 blendedColor = (gUniformBlock.lightColor.xyz  * baseColor) * lightIntensity;
    float3 diffuse = blendedColor * max(dot(normal.xyz, lightDir), 0.0);
    float3 ambient = baseColor * ambientCoeff;
    Out = float4(diffuse + ambient, 1.0);
    RETURN(Out);
}
