
/*
 * Copyright (c) 2017-2025 The Forge Interactive Inc.
 * 
 * This file is part of The-Forge
 * (see https://github.com/ConfettiFX/The-Forge).
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
*/

#include "structs.h"
#include "srt.h"


STRUCT(VSInput)
{
    DATA(float3, Position, POSITION);
    DATA(float3, Normal, NORMAL);
};

STRUCT(VSOutput)
{
	DATA(float4, Position, SV_Position);
};
ROOT_SIGNATURE(DefaultRootSignature)
VSOutput VS_MAIN( VSInput In )
{
	INIT_MAIN;
	VSOutput Out;

#if FT_MULTIVIEW
    float4x4 tempMat = mul(gUniformBlock.ProjectionViewMat[VR_VIEW_ID], gUniformBlock.ModelMatrixOcclusion);
#else
    float4x4 tempMat = mul(gUniformBlock.ProjectionViewMat, gUniformBlock.ModelMatrixOcclusion);
#endif
    Out.Position = mul(tempMat, float4(In.Position,1.0));
	RETURN(Out);
}
