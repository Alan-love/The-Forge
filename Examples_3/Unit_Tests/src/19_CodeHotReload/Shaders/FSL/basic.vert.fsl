/*
 * Copyright (c) 2017-2025 The Forge Interactive Inc.
 *
 * This file is part of The-Forge
 * (see https://github.com/ConfettiFX/The-Forge).
 *
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

#include "structs.h"
#include "srt.h"



STRUCT(VsIn)
{
    DATA(float, position, POSITION);
};

STRUCT(VSOutput)
{
    DATA(float4, pos, SV_Position);
    DATA(float3, color, COLOR0);
    DATA(float2, uv, TEXCOORD0);
};
ROOT_SIGNATURE(DefaultRootSignature)
VSOutput VS_MAIN(VsIn In, SV_InstanceID(uint) instanceId)
{
    INIT_MAIN;
    VSOutput Out;
    float    x = float(int(In.position) / 2);
    float    y = float(fmod(In.position, 2.0));

    float4 colorIndex = gInstanceBuffer[instanceId].colorIndex;

    Out.pos = mul(gInstanceBuffer[instanceId].modelMtx, float4(x, y, 0.f, 1.f) - float4(0.5f, 0.5f, 0.f, 0.f));
    Out.pos.w = 1.0f;
    Out.uv = float2((x + colorIndex.w) / 8.0, 1.0 - y);
    Out.color = colorIndex.rgb;
    RETURN(Out);
}
