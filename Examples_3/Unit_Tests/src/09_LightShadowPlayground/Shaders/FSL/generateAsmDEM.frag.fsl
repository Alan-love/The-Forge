/*
* Copyright (c) 2017-2025 The Forge Interactive Inc.
*
* This file is part of The-Forge
* (see https://github.com/ConfettiFX/The-Forge).
*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/

#include "vb_resources.h.fsl"
#include "quad_data.srt.h"

STRUCT(VSOutput)
{
    DATA(float4, Position, SV_Position);
    DATA(float2, UV, TEXCOORD0);
    DATA(float4, MiscData, TEXCOORD1);
};

SET_OUTPUT_FORMAT(default, FMT_32_R)

ROOT_SIGNATURE(DefaultRootSignature)
float PS_MAIN( VSOutput In )
{
	INIT_MAIN;
	float Out;
	const float2 samplerOffsets[16] =
    {
        float2( 1.0,  0.0), float2( 0.0,  1.0), float2( 1.0,  1.0), float2(-1.0, -1.0),
        float2( 0.0, -1.0), float2( 1.0, -1.0), float2(-1.0,  0.0), float2(-1.0,  1.0),

		float2( 0.5,  0.0), float2( 0.0,  0.5), float2( 0.5,  0.5), float2(-0.5, -0.5),
        float2( 0.0, -0.5), float2( 0.5, -0.5), float2(-0.5,  0.0), float2(-0.5,  0.5),
    };

	float maxZ = SampleLvlTex2D(gDepthPassTexture, 
		gClampToEdgeNearSampler, In.UV, 0.0).r;

	
	for(int i = 0; i < 16; ++i)
	{
		maxZ = max(maxZ, SampleLvlTex2D(gDepthPassTexture, gClampToEdgeNearSampler, 
			In.UV + samplerOffsets[i] * In.MiscData.xy, 0).r);
	}
	
	//WARNING: MISC DATA IS SUPPOSE TO BE 0
	Out = maxZ - In.MiscData.z;
	RETURN(Out);
}
