/*
 * Copyright (c) 2017-2025 The Forge Interactive Inc.
 * 
 * This file is part of The-Forge
 * (see https://github.com/ConfettiFX/The-Forge).
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
*/

#include "../../../../../../Common_3/Renderer/ParticleSystem/Shaders/particle_shared.h.fsl"
#include "shader_defs.h.fsl"
#include "vb_resources.h.fsl"
#include "visibilityBuffer_shade.srt.h"


ROOT_SIGNATURE(ComputeRootSignature)
NUM_THREADS(TEXTURE_CLEAR_THREAD_COUNT, TEXTURE_CLEAR_THREAD_COUNT, 1)
void CS_MAIN( SV_DispatchThreadID(uint3) threadID )
{
	INIT_MAIN;

	uint2 screenSize = uint2(GetDimensions(gShadowCollectorDest, NO_SAMPLER));
	if (threadID.x >= screenSize.x || threadID.y >= screenSize.y)
	{
		RETURN();
	}

	Write2D(gShadowCollectorDest, threadID.xy, 1.0);
	gTransparencyListHeadsRW[threadID.y * screenSize.x + threadID.x] = 0;

	RETURN();
}
